// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using publication.Context;

#nullable disable

namespace Publications_WebAPI_LeadMentoring.Migrations
{
    [DbContext(typeof(PublicationContext))]
    partial class PublicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("publication.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Menssage")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Message");

                    b.Property<int>("PublicationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("RegistrationDate");

                    b.HasKey("CommentId")
                        .HasName("PK_Comment");

                    b.HasIndex("PublicationId");

                    b.ToTable("tb_Comment", (string)null);
                });

            modelBuilder.Entity("publication.Models.Publication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CreationDate");

                    b.Property<int>("MaxComments")
                        .HasColumnType("int")
                        .HasColumnName("MaxCOmments");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Message");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Title");

                    b.HasKey("Id")
                        .HasName("PK_Publication");

                    b.ToTable("tb_Publication", (string)null);
                });

            modelBuilder.Entity("publication.Models.Comment", b =>
                {
                    b.HasOne("publication.Models.Publication", "Publication")
                        .WithMany("Comments")
                        .HasForeignKey("PublicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publication");
                });

            modelBuilder.Entity("publication.Models.Publication", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
